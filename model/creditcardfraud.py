# -*- coding: utf-8 -*-
"""creditcardfraud.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oa5RJb_BFbuVHs-66Y0RODdsdqM55fNe
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

df=pd.read_csv('creditcard.csv')
df.describe()

df.isnull().sum()

# Normalize 'Amount' and drop 'Time'
from sklearn.preprocessing import StandardScaler
df['Amount'] = StandardScaler().fit_transform(df[['Amount']])
df = df.drop(columns=['Time'])

"""eda"""

import seaborn as sns
import matplotlib.pyplot as plt

sns.countplot(x='Class', data=df)
plt.title("Fraudulent vs Non-Fraudulent Transactions")

"""3. Handle Imbalanced Dataset
Options:

Undersampling / Oversampling (SMOTE)
"""

from imblearn.over_sampling import SMOTE
X = df.drop('Class', axis=1)
y = df['Class']

sm = SMOTE()
X_res, y_res = sm.fit_resample(X, y)

"""4. Model Building
Use Logistic Regression, Random Forest, XGBoost, or Neural Network.
"""

from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix

X_train, X_test, y_train, y_test = train_test_split(X_res, y_res, test_size=0.2)
model = RandomForestClassifier()
model.fit(X_train, y_train)

predictions = model.predict(X_test)
print(classification_report(y_test, predictions))

import joblib
joblib.dump(model, 'model.pkl')